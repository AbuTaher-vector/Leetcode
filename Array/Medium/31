class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        vector<int>v;
        v=nums;
        while(next_permutation(nums.begin(),nums.end())){
            break;
        }
        if(v==nums) sort(nums.begin(),nums.end());

    }
};

alternative : 

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        if(nums.size()==1) return;
        int ind1=-1;
        for(int i=nums.size()-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind1=i;
                break;
            }
        }
        if(ind1<0) reverse(nums.begin(),nums.end());
        else{
            int ind2;
            for(int i=nums.size()-1;i>ind1;i--){
            if(nums[ind1]<nums[i]){
                ind2=i;
                break;
            }
           }
           swap(nums[ind1],nums[ind2]);
           sort(nums.begin()+ind1+1,nums.end());

        }
    }
};
